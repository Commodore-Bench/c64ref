ADC  arith  NV----ZC  A + M + C → A, C
AND  logic  N-----Z-  A ∧ M → A
ASL  shift  N-----ZC  C ← /7...0/ ← 0
BCC  bra    --------  Branch on C = 0
BCS  bra    --------  Branch on C = 1
BEQ  bra    --------  Branch on Z = 1
BIT  logic  NV----Z-  A & M, M7 → N, M6 → V
BMI  bra    --------  Branch on N = 1
BNE  bra    --------  Branch on Z = 0
BPL  bra    --------  Branch on N = 0
BRK  ctrl   -----1--  Break
BVC  bra    --------  Branch on V = 0
BVS  bra    --------  Branch on V = 1
CLC  flags  -------0  0 → C
CLD  flags  ----0---  0 → D
CLI  flags  -----0--  0 → I
CLV  flags  -0------  0 → V
CMP  arith  N-----ZC  A - M
CPX  arith  N-----ZC  X - M
CPY  arith  N-----ZC  Y - M
DEC  inc    N-----Z-  M - 1 → M
DEX  inc    N-----Z-  X - 1 → X
DEY  inc    N-----Z-  Y - 1 → Y
EOR  logic  N-----Z-  A ⊻ M → A
INC  inc    N-----Z-  M + 1 → M
INX  inc    N-----Z-  X + 1 → X
INY  inc    N-----Z-  Y + 1 → Y
JMP  ctrl   --------  Jump to new location
JSR  ctrl   --------  Jump to subroutine
LDA  load   N-----Z-  M → A
LDX  load   N-----Z-  M → X
LDY  load   N-----Z-  M → Y
LSR  shift  N-----ZC  0 → /7...0/ → C
NOP  nop    --------  No operation
ORA  logic  N-----Z-  A ∨ M → A
PHA  stack  --------  A → Ms, S - 1 → S
PHP  stack  --------  P → Ms, S - 1 → S
PLA  stack  N-----Z-  S - 1 → S, Ms → A
PLP  stack  NV--DIZC  S - 1 → S, Ms → P
ROL  shift  N-----ZC  C ← /7...0/ ← C
ROR  shift  N-----ZC  C → /7...0/ → C
RTI  ctrl   NV--DIZC  Return from interrupt
RTS  ctrl   --------  Return from subroutine
SBC  arith  NV----ZC  A - M - C → A
SEC  flags  -------1  1 → C
SED  flags  ----1---  1 → D
SEI  flags  -----1--  1 → I
STA  load   --------  A → M
STX  load   --------  X → M
STY  load   --------  Y → M
TAX  trans  N-----Z-  A → X
TAY  trans  N-----Z-  A → Y
TSX  trans  N-----Z-  S → X
TXA  trans  N-----Z-  X → A
TXS  trans  --------  X → S
TYA  trans  N-----Z-  Y → A

AHX  load   --------  A ∧ X ∧ H → M
ALR  arith  *-----**  (A ∧ M) / 2 → A
ANC  arith  *-----**  A ∧ M → A
ARR  arith  **----**  (A ∧ M) / 2 → A
AXS  arith  *-----**  (A ∧ X) - M → X
DCP  arith  *-----**  M - 1 → M, A - M
ISC  arith  **----**  M + 1 → M, A - M → A
KIL  kil    --------  Stop execution
LAS  load   *-----*-  M ∧ S → A, X, S
LAX  load   *-----*-  M → A, X
RLA  arith  *-----**  ROL(M) → M, A ∧ M → A
RRA  arith  **----**  ROR(M) → M, A + M + C → A
SAX  load   --------  A ∧ X → M
SHX  load   --------  X ∧ H → M
SHY  load   --------  Y ∧ H → M
SLO  arith  *-----**  M * 2 → M, A ∨ M → A
SRE  arith  *-----**  M / 2 → M, A ⊻ M → A
TAS  trans  --------  A ∧ X → M, S ∧ H → M
XAA  arith  *-----*-  X ∧ M → A
