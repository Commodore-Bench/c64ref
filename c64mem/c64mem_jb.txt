- C64 RAM Map (Jim Butterfield)
-
- COMMODORE 64 MEMORY MAP
- Compiled by Jim Butterfield
- Classic Computer Magazine Archive COMPUTE! ISSUE 29 / OCTOBER 1982 / PAGE 150
- https://www.atarimagazines.com/compute/issue29/394_1_COMMODORE_64_MEMORY_MAP.php
- https://www.atariarchives.org/mlb/appendix_b.php
-
------------------------------------------------------------
-
# [...]


$0000            Chip directional register
$0001            Chip I/O; memory & tape control
$0003-$0004      Float-Fixed vector
$0005-$0006      Fixed-Float vector
$0007            Search character
$0008            Scan-quotes flag
$0009            TAB column save
$000A            0 = LOAD, 1 = VERIFY
$000B            Input buffer pointer/# subscrpt
$000C            Default DIM flag
$000D            Type : FF = string, 00 = numeric
$000E            Type : 80 = integer, 00 = floating point
$000F            DATA scan/LIST quote/memry flag
$0010            Subscript/FNx flag
$0011            0 = INPUT; $40 = GET; $98 = READ
$0012            ATN sign/Comparison eval flag
$0013            Current I/O prompt flag
$0014-$0015      Integer value
$0016            Pointer : temporary strg stack
$0017-$0018      Last temp string vector
$0019-$0021      Stack for temporary strings
$0022-$0025      Utility pointer area
$0026-$002A      Product area for multiplication
$002B-$002C      Pointer : Start-of-Basic
$002D-$002E      Pointer : Start-of-Variables
$002F-$0030      Pointer : Start-of-Arrays
$0031-$0032      Pointer : End-of-Arrays
$0033-$0034      Pointer : String-storage(moving down)
$0035-$0036      Utility string pointer
$0037-$0038      Pointer : Limit-of-memory
$0039-$003A      Current Basic line number
$003B-$003C      Previous Basic line number
$003D-$003E      Pointer : Basic statement for CONT
$003F-$0040      Current DATA line number
$0041-$0042      Current DATA address
$0043-$0044      Input vector
$0045-$0046      Current variable name
$0047-$0048      Current variable address
$0049-$004A      Variable pointer for FOR/NEXT
$004B-$004C      Y-save; op-save; Basic pointer save
$004D            Comparison symbol accumulator
$004E-$0053      Misc work area, pointer, etc
$0054-$0056      Jump vector for functions
$0057-$0060      Misc numeric work area
$0061            Accum#l : Exponent
$0062-$0065      Accum#l : Mantissa
$0066            Accum#l : Sign
$0067            Series evaluation constant pointer
$0068            Accum#l hi-order (over flow)
$0069-$006E      Accum#2 : Exponent, etc.
$006F            Sign comparison, Acc#l vs #2
$0070            Accum#l lo-order (rounding)
$0071-$0072      Cassette buff len/Series pointer
$0073-$008A      CHRGET subroutine; get Basic char
$007A-$007B      Basic pointer (within subrtn)
$008B-$008F      RND seed value
$0090            Status word ST
$0091            Keyswitch PIA : STOP and RVS flags
$0092            Timing constant for tape
$0093            Load = 0, Verify = l
$0094            Serial output : deferred char flag
$0095            Serial deferred character
$0096            Tape EOT received
$0097            Register save
$0098            How many open files
$0099            Input device, normally 0
$009A            Output CMD device, normally 3
$009B            Tape character parity
$009C            Byte-received flag
$009D            Direct = $80/RUN = 0 output control
$009E            Tp Pass 1 error log/char buffer
$009F            Tp Pass 2 err log corrected
$00A0-$00A2      Jiffy Clock HML
$00A3            Serial bit count/EOI flag
$00A4            Cycle count
$00A5            Countdown, tape write/bit count
$00A6            Tape buffer pointer
$00A7            Tp Wrt ldr count/Rd pass/inbit
$00A8            Tp Wrt new byte/Rd error/inbit cnt
$00A9            Wrt start bit/Rd bit err/stbit
$00AA            Tp Scan; Cnt; Ld; End/byte assy
$00AB            Wr lead length/Rd checksum/parity
$00AC-$00AD      Pointer : tape bufr, scrolling
$00AE-$00AF      Tape end adds/End of program
$00B0-$00B1      Tape timing constants
$00B2-$00B3      Pntr : start of tape buffer
$00B4            l = Tp timer enabled; bit count
$00B5            Tp EOT/RS232 next bit to send
$00B6            Read character error/outbyte buf
$00B7            # characters in file name
$00B8            Current logical file
$00B9            Current secndy address
$00BA            Current device
$00BB-$00BC      Pointer to file name
$00BD            Wr shift word/Rd input char
$00BE            # blocks remaining to Wr/Rd
$00BF            Serial word buffer
$00C0            Tape motor interlock
$00C1-$00C2      I/O start address
$00C3-$00C4      Kernel setup pointer
$00C5            Last key pressed
$00C6            # chars in keybd buffer
$00C7            Screen reverse flag
$00C8            End-of-line for input pointer
$00C9-$00CA      Input cursor log (row, column)
$00CB            Which key :  64 if no key
$00CC            0 = flash cursor
$00CD            Cursor timing countdown
$00CE            Character under cursor
$00CF            Cursor in blink phase
$00D0            Input from screen/from keyboard
$00D1-$00D2      Pointer to screen line
$00D3            Position of cursor on above line
$00D4            0 = direct cursor, else programmed
$00D5            Current screen line length
$00D6            Row where curosr lives
$00D7            Last inkey/checksum/buffer
$00D8            # of INSERTs outstanding
$00D9-$00F2      Screen line link table
$00F3-$00F4      Screen color pointer
$00F5-$00F6      Keyboard pointer
$00F7-$00F8      RS-232 Rev pntr
$00F9-$00FA      RS-232 Tx pntr
$00FF-$010A      Floating to ASCII work area
$0100-$013E      Tape error log
$0100-$01FF      Processor stack area
$0200-$0258      Basic input buffer
$0259-$0262      Logical file table
$0263-$026C      Device # table
$026D-$0276      Sec Adds table
$0277-$0280      Keybd buffer
$0281-$0282      Start of Basic Memory
$0283-$0284      Top of Basic Memory
$0285            Serial bus timeout flag
$0286            Current color code
$0287            Color under cursor
$0288            Screen memory page
$0289            Max size of keybd buffer
$028A            Repeat all keys
$028B            Repeat speed counter
$028C            Repeat delay counter
$028D            Keyboard Shift/Control flag
$028E            Last shift pattern
$028F-$0290      Keyboard table setup pointer
$0291            Keyboard shift mode
$0292            0 = scroll enable
$0293            RS-232 control reg
$0294            RS-232 command reg
$0295-$0296      Bit timing
$0297            RS-232 status
$0298            # bits to send
$0299-$029A      RS-232 speed/code
$029B            RS232 receive pointer
$029C            RS232 input pointer
$029D            RS232 transmit pointer
$029E            RS232 output pointer
$029F-$02A0      IRQ save during tape I/O
$02A1            CIA 2 (NMI) Interrupt Control
$02A2            CIA 1 Timer A control log
$02A3            CIA 1 Interrupt Log
$02A4            CIA 1 Timer A enabled flag
$02A5            Screen row marker
$02C0-$02FE       (Sprite 11)
$0300-$0301      Error message link
$0302-$0303      Basic warm start link
$0304-$0305      Crunch Basic tokens link
$0306-$0307      Print tokens link
$0308-$0309      Start new Basic code link
$030A-$030B      Get arithmetic element link
$030C            SYS A-reg save
$030D            SYS X-reg save
$030E            SYS Y-reg save
$030F            SYS status reg save
$0310-$0312      USR function jump ($B248)
$0314-$0315      Hardware interrupt vector ($EA31)
$0316-$0317      Break interrupt vector ($FE66)
$0318-$0319      NMI interrupt vector ($FE47)
$031A-$031B      OPEN vector ($F34A)
$031C-$031D      CLOSE vector ($F291)
$031E-$031F      Set - input vector ($F20E)
$0320-$0321      Set - output vector ($F250)
$0322-$0323      Restore I/0 vector ($F333)
$0324-$0325      INPUT vector ($F157)
$0326-$0327      Output vector ($F1CA)
$0328-$0329      Test-STOP vector ($F6ED)
$032A-$032B      GET vector ($F13E)
$032C-$032D      Abort I/o vector ($F32F)
$032E-$032F      Warm start vector ($FE66)
$0330-$0331      LOAD link ($F4A5)
$0332-$0333      SAVE link ($F5ED)
$033C-$03FB      Cassette buffer
$0340-$037E      (Sprite 13)
$0380-$03BE      (Sprite 14)
$03C0-$03FE      (Sprite 15)
$0400-$07FF      Screen memory
$0800-$9FFF      Basic ROM memory
$8000-$9FFF      Alternate: Rom plug-in area
$A000-$BFFF      ROM : Basic
$A000-$BFFF      Alternate: RAM
$C000-$CFFF      RAM memory, including alternate
$D000-$D02E      Video Chip (6566)
$D400-$D41C      Sound Chip (6581 SID)
$D800-$DBFF      Color nybble memory
$DC00-$DC0F      Interface chip 1, IRQ (6526 CIA)
$DD00-$DD0F      Interface chip 2, NMI (6526 CIA)
$D000-$DFFF      Alternate: Character set
$E000-$FFFF      ROM: Operating System
$E000-$FFFF      Alternate : RAM
